<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>付文杰的博客</title>
  
  <subtitle>个人博客  |  日常</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://FWj1635387072.github.io/"/>
  <updated>2019-11-10T07:29:55.334Z</updated>
  <id>https://FWj1635387072.github.io/</id>
  
  <author>
    <name>付文杰</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据结构中的线性表Ⅱ（Java语言）</title>
    <link href="https://FWj1635387072.github.io/2019/11/10/%E5%88%97%E8%A1%A8%E2%85%A1/"/>
    <id>https://FWj1635387072.github.io/2019/11/10/列表Ⅱ/</id>
    <published>2019-11-10T07:32:11.103Z</published>
    <updated>2019-11-10T07:29:55.334Z</updated>
    
    <content type="html"><![CDATA[<p>Java语言实现线性表Ⅱ</p><a id="more"></a><p>上次关于线性表的实现是有缺陷的，今天将其稍作改进</p><h2 id="索引部分（数组下标）"><a href="#索引部分（数组下标）" class="headerlink" title="索引部分（数组下标）"></a>索引部分（数组下标）</h2><p>当对线性表进行修改、删除、查询时可能会遇到这种情况，传入的索引不在我们的数组下标范围内。</p><p>比如说：我的数组下标是0-19，我传入了20，考虑到这种情况，我们对其进行代码进行补充</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询目标索引上的元素</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">at</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">return</span> array[index];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改和删除同样使用这种方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据索引删除元素</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = index; i &lt; size - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        array[i] = array[i + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    array[size - <span class="number">1</span>] = <span class="keyword">null</span>;</span><br><span class="line">    size--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改元素</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> index, Object newElement)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    array[index] = newElement;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="断言的引入"><a href="#断言的引入" class="headerlink" title="断言的引入"></a>断言的引入</h2><p>上一次我们测试的时候写了一大堆的东西，将结果打印出来，我们通过肉眼来观察，这样测试是有一定风险的，</p><p>我们可以使用第三方的工具来辅助我们进行测试</p><p>这里我使用的是assertj</p><p>它的maven项目依赖为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.assertj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>assertj-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当然可以选择更高版本的。</p><p>案例：</p><p>​    执行完删除元素“4”之后，断定sl打印出来的结果是否和[1，2，3]相同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sl.delete(<span class="string">"4"</span>);</span><br><span class="line">    Assertions.assertThat(sl.toString()).isEqualTo(<span class="string">"[1,2,3]"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果一个方法返回值为boolean类型的话，那么我们可以断定它是真还是假</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Assertions.assertThat(sl.isRight()).isTrue();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java语言实现线性表Ⅱ&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://FWj1635387072.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="学习笔记" scheme="https://FWj1635387072.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="DataStructure" scheme="https://FWj1635387072.github.io/tags/DataStructure/"/>
    
  </entry>
  
  <entry>
    <title>数据结构中的线性表（Java语言）</title>
    <link href="https://FWj1635387072.github.io/2019/11/08/%E5%88%97%E8%A1%A8/"/>
    <id>https://FWj1635387072.github.io/2019/11/08/列表/</id>
    <published>2019-11-08T14:22:24.720Z</published>
    <updated>2019-11-10T02:02:13.768Z</updated>
    
    <content type="html"><![CDATA[<p>Java语言实现列表</p><a id="more"></a><h2 id="线性表定义"><a href="#线性表定义" class="headerlink" title="线性表定义"></a>线性表定义</h2><p>​    线性表是由一组<strong>数据元素</strong>构成，数据元素的<strong>位置</strong>只取决于自己的<strong>序号</strong>，元素之间的<strong>相对位置</strong>是线性的。</p><p>在复杂线性表中，由若干项数据元素组成的数据元素称为<strong>记录</strong>；由多个记录构成的线性表称为<strong>文件</strong>。</p><h3 id="非空线性表的结构特征"><a href="#非空线性表的结构特征" class="headerlink" title="非空线性表的结构特征"></a>非空线性表的结构特征</h3><p>​    （1）且只有一个根结点a1，它无前件；</p><p>​    （2）有且只有一个终端结点an，它无后件；</p><p>​    （3）除根结点与终端结点外，其他所有结点有且只有一个前件，也有且只有一个后件。</p><p>​          结点个数n称为线性表的长度，当n=0时，称为空表。</p><h3 id="线性表的顺序存储结构两个基本特点"><a href="#线性表的顺序存储结构两个基本特点" class="headerlink" title="线性表的顺序存储结构两个基本特点"></a>线性表的顺序存储结构两个基本特点</h3><p>​    （1）线性表中所有元素所占的存储空间是连续的；</p><p>​    （2）线性表中各数据元素在存储空间中是按逻辑顺序依次存放的</p><h2 id="线性表用java语言实现"><a href="#线性表用java语言实现" class="headerlink" title="线性表用java语言实现"></a>线性表用java语言实现</h2><h3 id="1、准备工作"><a href="#1、准备工作" class="headerlink" title="1、准备工作"></a>1、准备工作</h3><p>​        定义接口，定义对线性表的一些操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线性表的接口定义</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyList</span> </span>&#123;</span><br><span class="line">    <span class="comment">//增加元素</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(Object element)</span></span>;</span><br><span class="line">    <span class="comment">//删除元素</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(Object element)</span></span>;</span><br><span class="line">    <span class="comment">//按索引删除元素</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> index)</span></span>;</span><br><span class="line">    <span class="comment">//按照索引更新元素</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> index, Object newElement)</span></span>;</span><br><span class="line">    <span class="comment">//查询对象下标的元素</span></span><br><span class="line">    <span class="function">Object <span class="title">at</span><span class="params">(<span class="keyword">int</span> index)</span></span>;</span><br><span class="line">    <span class="comment">//查询元素是否存在</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">contains</span><span class="params">(Object element)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、实现接口"><a href="#2、实现接口" class="headerlink" title="2、实现接口"></a>2、实现接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyArrayList</span> <span class="keyword">implements</span> <span class="title">MyList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Object[] array;<span class="comment">//列表</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">0</span>;<span class="comment">//列表中的元素个数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> capacity = <span class="number">10</span>;<span class="comment">//列表中的容量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//默认的构造方法，创建一个长度为10的数组作为列表</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyArrayList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        array = <span class="keyword">new</span> Object[capacity];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//带参数的构造方法，创建一个长度为传入参数的数组作为列表</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyArrayList</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.capacity = capacity;</span><br><span class="line">        array = <span class="keyword">new</span> Object[capacity];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加元素，如果增加的元素个数超过数组长度，扩容一倍，扩容的大小可控</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(Object element)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (size == capacity) &#123;</span><br><span class="line">            Object[] temp = <span class="keyword">new</span> Object[capacity * <span class="number">2</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">                temp[i] = array[i];</span><br><span class="line">            &#125;</span><br><span class="line">            array = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        array[size++] = element;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除数组中已有的元素，调用了本类中的其他方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Object element)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> res = contains(element);</span><br><span class="line">        System.out.println(<span class="string">"index"</span> +  res);</span><br><span class="line">        <span class="keyword">if</span> (res &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = res; i &lt; size - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                array[i] = array[i+<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            array[size - <span class="number">1</span>] = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        size--;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据索引删除元素</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = index; i &lt; size - <span class="number">1</span>;i++)&#123;</span><br><span class="line">            array[i] = array[i+<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        array[size - <span class="number">1</span>] = <span class="keyword">null</span>;</span><br><span class="line">        size --;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改元素</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> index, Object newElement)</span> </span>&#123;</span><br><span class="line">        array[index] = newElement;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询目标索引上的元素</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">at</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> array[index];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看数组中是否包含该元素，返回索引</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">contains</span><span class="params">(Object element)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (element.equals(array[i])) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出，重写toString（）方法，需要一些技巧</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="string">"["</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            sb.append(array[i] + (i == size - <span class="number">1</span> ? <span class="string">"]"</span> : <span class="string">" , "</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试用，返回数组的长度</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.size;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、创建Test类进行测试"><a href="#3、创建Test类进行测试" class="headerlink" title="3、创建Test类进行测试"></a>3、创建Test类进行测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyArrayListTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> MyArrayList myArrayList = <span class="keyword">new</span> MyArrayList(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        myArrayList.add(<span class="string">"1"</span>);myArrayList.add(<span class="string">"2"</span>);myArrayList.add(<span class="string">"3"</span>);</span><br><span class="line">        myArrayList.add(<span class="string">"4"</span>);myArrayList.add(<span class="string">"5"</span>);myArrayList.add(<span class="string">"6"</span>);</span><br><span class="line">        myArrayList.add(<span class="string">"7"</span>);myArrayList.add(<span class="string">"8"</span>);myArrayList.add(<span class="string">"9"</span>);</span><br><span class="line">        myArrayList.add(<span class="string">"10"</span>);myArrayList.add(<span class="string">"11"</span>);myArrayList.add(<span class="string">"12"</span>);</span><br><span class="line">        myArrayList.add(<span class="string">"13"</span>);myArrayList.add(<span class="string">"14"</span>);myArrayList.add(<span class="string">"15"</span>);</span><br><span class="line">        myArrayList.add(<span class="string">"16"</span>);myArrayList.add(<span class="string">"17"</span>);myArrayList.add(<span class="string">"18"</span>);</span><br><span class="line">        myArrayList.add(<span class="string">"19"</span>);myArrayList.add(<span class="string">"20"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(myArrayList.at(<span class="number">0</span>));</span><br><span class="line">        System.out.println(myArrayList.getSize());</span><br><span class="line">        System.out.println(myArrayList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(myArrayList.getSize());</span><br><span class="line">        myArrayList.delete(<span class="string">"1"</span>);</span><br><span class="line">        System.out.println(myArrayList.getSize());</span><br><span class="line">        System.out.println(myArrayList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete1</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(myArrayList.getSize());</span><br><span class="line">        myArrayList.delete(<span class="number">10</span>);</span><br><span class="line">        System.out.println(myArrayList);</span><br><span class="line">        System.out.println(myArrayList.getSize());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        myArrayList.update(<span class="number">10</span>,<span class="string">"11111"</span>);</span><br><span class="line">        System.out.println(myArrayList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">at</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(myArrayList.at(<span class="number">10</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contains</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(myArrayList.contains(<span class="string">"14"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、总结"><a href="#4、总结" class="headerlink" title="4、总结"></a>4、总结</h3><ol><li><p>列表根据其基本特点我们确定用数组对其进行存储</p></li><li><p>定义数组后，由于对其操作时经常要使用其长度，定义size，<br> 为了使操作更加方便，便于了解其属性，我们使用capacity来定义其容量</p></li><li><p>增加元素时，如果元素个数超过了定义时给的容量，我们需要对列表进行扩容</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span> (size == capacity) &#123;</span><br><span class="line">     Object[] temp = <span class="keyword">new</span> Object[capacity * <span class="number">2</span>];</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">         temp[i] = array[i];</span><br><span class="line">     &#125;</span><br><span class="line">     array = temp;</span><br><span class="line">&#125;</span><br><span class="line">array[size++] = element;</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>由于数组和线性表的特性，对其操作时，删除时需要将要删除元素之后的元素提前一位，最后一个元素设置为空。删除元素时我们可以</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Object element)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = contains(element);</span><br><span class="line">    delete(res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据索引删除元素</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = index; i &lt; size - <span class="number">1</span>;i++)&#123;</span><br><span class="line">        array[i] = array[i+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    array[size - <span class="number">1</span>] = <span class="keyword">null</span>;</span><br><span class="line">    size--;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>测试时我们要将数组打印出来，默认重写toString（）有时无法满足我们的需求，我们需要对其进行自定义</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="string">"["</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        sb.append(array[i] + (i == size - <span class="number">1</span> ? <span class="string">"]"</span> : <span class="string">" , "</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="6"><li>测试时，使用junit一键生成测试类有利于我们进行测试</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java语言实现列表&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://FWj1635387072.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="学习笔记" scheme="https://FWj1635387072.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="DataStructure" scheme="https://FWj1635387072.github.io/tags/DataStructure/"/>
    
  </entry>
  
  <entry>
    <title>SQL Server 中与用户和用户权限相关的简单sql语句</title>
    <link href="https://FWj1635387072.github.io/2019/11/08/sql_server%E4%B8%AD%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/"/>
    <id>https://FWj1635387072.github.io/2019/11/08/sql_server中用户权限/</id>
    <published>2019-11-08T07:15:01.904Z</published>
    <updated>2019-11-08T09:04:40.851Z</updated>
    
    <content type="html"><![CDATA[<p>有关SQL server中的一些权限</p><a id="more"></a><h2 id="创建登陆名"><a href="#创建登陆名" class="headerlink" title="创建登陆名"></a>创建登陆名</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> LOGIN &lt;loginName&gt; <span class="keyword">WITH</span> <span class="keyword">PASSWORD</span> = <span class="string">'&lt;enterStrongPasswordHere&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--例子：创建一个登陆名是u1，密码是123456的用户</span></span><br><span class="line"><span class="comment">--登陆时选择：基于使用 SQL Server 身份验证的登录名的用户</span></span><br><span class="line"><span class="keyword">create</span> login u1 <span class="keyword">with</span> <span class="keyword">password</span> = <span class="string">'123456'</span></span><br></pre></td></tr></table></figure><h2 id="在一个数据库中创建用户"><a href="#在一个数据库中创建用户" class="headerlink" title="在一个数据库中创建用户"></a>在一个数据库中创建用户</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> user_name </span><br><span class="line">    [ </span><br><span class="line">        &#123; <span class="keyword">FOR</span> | <span class="keyword">FROM</span> &#125; LOGIN login_name </span><br><span class="line">    ]</span><br><span class="line">    [ <span class="keyword">WITH</span> DEFAULT_SCHEMA = schema_name ] </span><br><span class="line">[ ; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">--例子：在test1数据库中使用登陆名u1，创建一个u1用户</span></span><br><span class="line"><span class="comment">--注意，使用默认架构要用公开的架构，对于其他用户的架构，如果没有权限，是不能设置的。</span></span><br><span class="line"><span class="keyword">use</span> test1 </span><br><span class="line"><span class="keyword">go</span><span class="comment">--go只是SQL Server管理器（SSMS）中用来提交T-SQL语句的一个标志</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> u1<span class="comment">--具体解释可参考文章最后的链接</span></span><br><span class="line"><span class="keyword">from</span> login u1</span><br></pre></td></tr></table></figure><h2 id="创建架构"><a href="#创建架构" class="headerlink" title="创建架构"></a>创建架构</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">SCHEMA</span> &lt;schemaName&gt; AUTHORIZATION &lt;userName&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">--create schema &lt;schema&gt;,创建的架构默认为dbo用户创建</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">schema</span> sh1     </span><br><span class="line"></span><br><span class="line"><span class="comment">--在某个数据库中，使用userName该用户创建架构</span></span><br><span class="line"><span class="comment">--注意：拥有架构不一定可以在架构下建表，必须要有建表的权限</span></span><br><span class="line"><span class="comment">--例子：使用u1用户创建架构sh2，sh2架构是属于u1的</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">schema</span> sh2 <span class="comment">--创建sh2架构</span></span><br><span class="line">authorization u1<span class="comment">--架构的主人是u1</span></span><br></pre></td></tr></table></figure><hr><p>之前的工作均为准备工作，以下为权限管理</p><hr><h2 id="sql中的权限（非SQL-server）"><a href="#sql中的权限（非SQL-server）" class="headerlink" title="sql中的权限（非SQL server）"></a>sql中的权限（非SQL server）</h2><p>​    对象类型为<strong>数据库模式</strong>的权限：</p><table><thead><tr><th align="center">对象</th><th align="center">操作类型</th></tr></thead><tbody><tr><td align="center">模式</td><td align="center">create chema</td></tr><tr><td align="center">基本表</td><td align="center">create table   alter table</td></tr><tr><td align="center">视图</td><td align="center">create view</td></tr><tr><td align="center">索引</td><td align="center">create index</td></tr></tbody></table><p>​    对象类型为<strong>数据</strong>的权限</p><table><thead><tr><th align="center">对象</th><th align="center">操作类型</th></tr></thead><tbody><tr><td align="center">基本表和视图</td><td align="center"><strong>crud</strong>，references，all privileges</td></tr><tr><td align="center">属性列</td><td align="center"><strong>cru</strong>，references，all privileges</td></tr></tbody></table><h3 id="ps："><a href="#ps：" class="headerlink" title="ps："></a>ps：</h3><p><strong>crud</strong>是指在做计算处理时的增加(Create)、读取(Read)、更新(Update)和删除(Delete)几个单词的首字母简写。<strong>crud</strong>主要被用在描述软件系统中数据库或者持久层的基本操作功能</p><h2 id="授予与收回"><a href="#授予与收回" class="headerlink" title="授予与收回"></a>授予与收回</h2><h3 id="GRANT授予"><a href="#GRANT授予" class="headerlink" title="GRANT授予"></a>GRANT授予</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> &#123; <span class="keyword">ALL</span> [ <span class="keyword">PRIVILEGES</span> ] &#125;<span class="comment">--授予什么权限</span></span><br><span class="line">      | permission [ ( <span class="keyword">column</span> [ ,...n ] ) ] [ ,...n ]<span class="comment">--或者关于哪些列的许可</span></span><br><span class="line">      [ <span class="keyword">ON</span> [ <span class="keyword">class</span> :: ] securable ] <span class="comment">--关于哪个对象</span></span><br><span class="line">      <span class="keyword">TO</span> principal [ ,...n ]<span class="comment">--授予谁</span></span><br><span class="line">      [ <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span> ]<span class="comment">--是否可以转授</span></span><br><span class="line">      [ <span class="keyword">AS</span> principal ]<span class="comment">--作为什么</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--对于对象类型是数据库模式的权限，前提是自己拥有授权的权限</span></span><br><span class="line"><span class="comment">--将创建表的权限授予u1，其他权限类似</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">table</span> <span class="comment">--授予创建表的权限</span></span><br><span class="line"><span class="keyword">to</span> u1<span class="comment">--给u1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--对于对象类型是数据的权限</span></span><br><span class="line"><span class="comment">--将查询权限</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="comment">--授予查询权限</span></span><br><span class="line"><span class="keyword">on</span> student<span class="comment">--关于student表</span></span><br><span class="line"><span class="keyword">to</span> u1<span class="comment">--给用户u1</span></span><br><span class="line"><span class="keyword">with</span> <span class="keyword">grant</span> <span class="keyword">option</span><span class="comment">--可以转授</span></span><br></pre></td></tr></table></figure><h3 id="REVOKE收回"><a href="#REVOKE收回" class="headerlink" title="REVOKE收回"></a>REVOKE收回</h3><p>revoke的用法与grant用法基本一致（to 改为from），在此不再重复</p><h2 id="deny"><a href="#deny" class="headerlink" title="deny"></a>deny</h2><p>deny的用法与revoke的区别是：</p><p>​    revoke：收回之前被授予的权限</p><p>​    deny：拒绝给与该权限，即使该用户属于某个组，该组拥有该权限，该用户也没有该权限</p><h2 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">ROLE</span> role_name </span><br><span class="line"></span><br><span class="line"><span class="comment">--创建teacher角色，并授予查询，增加，修改学生表的权限</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">role</span> teacher<span class="comment">--创建teacher角色</span></span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span><span class="comment">--授权</span></span><br><span class="line"><span class="keyword">on</span> student</span><br><span class="line"><span class="keyword">to</span> teacher</span><br><span class="line"></span><br><span class="line"><span class="comment">--将用户 Wanida 的 CONTROL 权限授予用户 RolandX。</span></span><br><span class="line"><span class="keyword">GRANT</span> CONTROL <span class="keyword">ON</span> <span class="keyword">USER</span>::Wanida <span class="keyword">TO</span> RolandX;</span><br><span class="line"></span><br><span class="line"><span class="comment">--例子：将teacher的所有权限授予u1</span></span><br><span class="line"><span class="keyword">grant</span> control <span class="keyword">on</span> <span class="keyword">role</span>::teacher <span class="keyword">to</span> t1</span><br></pre></td></tr></table></figure><p>角色是权限的集合，使用角色可以简化授权操作</p><p>友情链接：</p><p>​    <a href="https://blog.csdn.net/zhangqidashu/article/details/17250321" target="_blank" rel="noopener">SQL Server 中 GO 的用法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有关SQL server中的一些权限&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://FWj1635387072.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="学习笔记" scheme="https://FWj1635387072.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="SQL server" scheme="https://FWj1635387072.github.io/tags/SQL-server/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客+这几天的学习内容</title>
    <link href="https://FWj1635387072.github.io/2019/11/07/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://FWj1635387072.github.io/2019/11/07/我的第一篇博客/</id>
    <published>2019-11-07T09:27:30.021Z</published>
    <updated>2019-11-07T12:42:28.300Z</updated>
    
    <content type="html"><![CDATA[<p>终于出来了.</p><a id="more"></a><p>以后学习记录就都放在这儿了.</p><p>Hexo + GitHub</p><p>总结下这几天 折腾这东西的想法: </p><h3 id="为什么我要建立这个博客"><a href="#为什么我要建立这个博客" class="headerlink" title="为什么我要建立这个博客."></a>为什么我要建立这个博客.</h3><ul><li>前几天突然想了解一下GitHub是什么东西, 然后找资料,发现他是”男性同性交友平台+开源软件社区”, 它成功的把我给吸引了.之后了解到了它下面的GitHub  Page项目, 我入迷了. 突然就有了建立自己的一片天地的念头, 之后就有了这个博客(虽然有点丑,直男审美没办法).</li><li>现在还有一点小问题没有处理掉（改配置，底层语法有点看不懂，还有插件不兼容）<ul><li>博客背景音乐</li><li>博客点击量统计</li><li>博客浏览人数统计 </li><li>评论留言</li></ul></li></ul><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><ul><li>在了解GitHub的途中, 知道了Git是目前世界上最先进的分布式版本控制系统（没有之一）. 当然我把它理解成远程协作常用的一个插件,  多人协同完成项目时常用, 很像之前接触的svn,但是比svn强大的多.</li></ul><ul><li><p>Git的工作流程</p><ul><li><p><img src="https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=115403806,2826593896&fm=173&app=49&f=JPEG?w=640&h=189&s=E1924D30ACA049131CD5CDC60300D0F0" alt="img"></p></li><li><p>workspace指代自己电脑上的工作目录</p></li><li><p>index为暂存区</p></li><li><p>repository为当前的工作区,我把它理解成缓存区</p></li><li><p>remote为git的远程服务器</p></li></ul></li></ul><ul><li><p>Git的几个命令在这里也总结一下</p><ol><li><p>git  clone           顾名思义,克隆,将GitHub中 的repository(仓库)克隆到本地的workspace中.</p></li><li><p>git  add              将本地电脑上的文件(变化的)添加到暂存区</p></li><li><p>git  commit  -m “msg”      </p><p> ​                -m 给提交增加备注 引号中的为备注信息, 将暂存区的文件提交到 缓存区中</p></li><li><p>git push            将缓存区的文件提交到远程服务器</p></li><li><p>git checkout  branchName                      切换分支</p></li><li><p>git pull                将远程服务器上的文件更新至本地</p></li><li><p>git  merge           合并分支</p></li></ol></li></ul><ul><li><p>hexo初始化的几个命令</p><ol><li><p>npm  install -g  hexo-cli                      加载程序</p></li><li><p>hexo init  文件夹名                               创建一个初始化的hexo</p></li><li><p>hexo  new   文件名                                创建一个文件，默认使用文章的标题决定文章的路径</p></li></ol></li></ul><ul><li><p>hexo的几个常用命令</p><ol><li>hexo clean                       清除缓存</li><li>hexo  g                                                  更新缓存（增加文件，或者修改文件后）</li><li>hexo s -p  端口号                                 打开本地服务器，可以在本地通过localhost：端口号进行访问</li><li>hexo  d                                                  上传hexo文件到绑定的GitHub仓库中</li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;终于出来了.&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://FWj1635387072.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="笔记" scheme="https://FWj1635387072.github.io/categories/%E9%9A%8F%E7%AC%94/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="学习笔记" scheme="https://FWj1635387072.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="日常" scheme="https://FWj1635387072.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="git+hexo" scheme="https://FWj1635387072.github.io/tags/git-hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://FWj1635387072.github.io/2019/11/06/hello-world/"/>
    <id>https://FWj1635387072.github.io/2019/11/06/hello-world/</id>
    <published>2019-11-06T13:06:13.175Z</published>
    <updated>2019-11-07T09:23:53.432Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="hello-hexo"><a href="#hello-hexo" class="headerlink" title="hello  hexo"></a>hello  hexo</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
